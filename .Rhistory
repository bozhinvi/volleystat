# Check which player is fielded with this shirt number in the season:
# read_csv("./data-raw/matchreports/MATCHSTAT_MEN_1314.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 9 & team.id == 1016) %>% select(player.name) %>% table()
# Change shirt number of Hopt to 100
df_teams[(df_teams$lastname == "Hopt" & df_teams$season_id == "1314"),]$player_id <- 100
# Check which player is fielded with this shirt number in the season:
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELMEN1314.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 10 & team.id == 1014) %>% select(player.name) %>% table()
df_teams[(df_teams$lastname == "Kroß"     & df_teams$season_id == "1314"),]$player_id <- 100
df_teams[(df_teams$lastname == "Pinheiro" & df_teams$season_id == "1314"),]$player_id <- 101
#### Season 2014/2015 MEN
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELMEN1415.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 2 & team.id == 1016) %>% select(player.name) %>% table()
df_teams[(df_teams$lastname == "Günthör" &
df_teams$firstname == "Jakob"  &
df_teams$season_id == "1415"),]$player_id             <- 100
#### Season 2013/2014 WOMEN
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1314.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 1 & team.id == 2002) %>% select(player.name) %>% table()
# All players are neverfielded in this season.
df_teams[(df_teams$lastname == "Grütze"  &
df_teams$team_id == 2002       &
df_teams$season_id == "1314"   &
df_teams$league_gender == "Women"),]$player_id <- 100
df_teams[(df_teams$lastname == "Kirsten" &
df_teams$team_id == 2002       &
df_teams$season_id == "1314"   &
df_teams$league_gender == "Women"),]$player_id <- 101
df_teams[(df_teams$lastname == "Petter"  &
df_teams$team_id == 2002       &
df_teams$season_id == "1314"   &
df_teams$league_gender == "Women"),]$player_id <- 102
df_teams[(df_teams$lastname == "Plath"   &
df_teams$team_id == 2002       &
df_teams$season_id == "1314"   &
df_teams$league_gender == "Women"),]$player_id <- 103
df_teams[(df_teams$lastname == "Wolf"    &
df_teams$team_id == 2002       &
df_teams$season_id == "1314"   &
df_teams$league_gender == "Women"),]$player_id <- 104
#### Season 2014/2015 WOMEN
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1415.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 2 & team.id == 2002) %>% select(player.name) %>% table()
# All players are neverfielded in this season.
df_teams[(df_teams$lastname == "Kirsten" &
df_teams$team_id == 2002       &
df_teams$season_id == "1415"   &
df_teams$league_gender == "Women"),]$player_id <- 100
df_teams[(df_teams$lastname == "Petter"  &
df_teams$team_id == 2002       &
df_teams$season_id == "1415"   &
df_teams$league_gender == "Women"),]$player_id <- 101
df_teams[(df_teams$lastname == "Plath"   &
df_teams$team_id == 2002       &
df_teams$season_id == "1415"   &
df_teams$league_gender == "Women"),]$player_id <- 102
df_teams[(df_teams$lastname == "Wolf"    &
df_teams$team_id == 2002       &
df_teams$season_id == "1415"   &
df_teams$league_gender == "Women"),]$player_id <- 103
#### Season 2015/2016 WOMEN
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1516.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 6 & team.id == 2002) %>% select(player.name) %>% table()
# All players are neverfielded in this season.
df_teams[(df_teams$lastname == "Lowke"   &
df_teams$team_id == 2002       &
df_teams$season_id == "1516"   &
df_teams$league_gender == "Women"),]$player_id <- 100
df_teams[(df_teams$lastname == "Plath"   &
df_teams$team_id == 2002       &
df_teams$season_id == "1516"   &
df_teams$league_gender == "Women"),]$player_id <- 101
df_teams[(df_teams$lastname == "Wolf"    &
df_teams$team_id == 2002       &
df_teams$season_id == "1516"   &
df_teams$league_gender == "Women"),]$player_id <- 102
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1516.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 18 & team.id == 2002) %>% select(player.name) %>% table()
df_teams[(df_teams$lastname == "Onyejekwe" &
df_teams$team_id == 2002         &
df_teams$season_id == "1516"     &
df_teams$league_gender == "Women"),]$player_id <- 103
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1516.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 16 & team.id == 2003) %>% select(player.name) %>% table()
df_teams[(df_teams$lastname == "Senger"    &
df_teams$team_id == 2003         &
df_teams$season_id == "1516"     &
df_teams$league_gender == "Women"),]$player_id <- 100
#### Season 2016/2017 WOMEN
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1617.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 1 & team.id == 2002) %>% select(player.name) %>% table()
df_teams[(df_teams$lastname == "Kömmling"  &
df_teams$team_id == 2002         &
df_teams$season_id == "1617"     &
df_teams$league_gender == "Women"),]$player_id <- 100
df_teams[(df_teams$lastname == "Weitzel"   &
df_teams$team_id == 2002         &
df_teams$season_id == "1617"     &
df_teams$league_gender == "Women"),]$player_id <- 101
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1617.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 17 & team.id == 2002) %>% select(player.name) %>% table()
df_teams[(df_teams$lastname == "Mancuso"   &
df_teams$team_id == 2002         &
df_teams$season_id == "1617"     &
df_teams$league_gender == "Women"),]$player_id <- 102
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1617.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 13 & team.id == 2012) %>% select(player.name) %>% table()
df_teams[(df_teams$lastname == "Wiesner"   &
df_teams$team_id == 2012         &
df_teams$season_id == "1617"     &
df_teams$league_gender == "Women"),]$player_id <- 101
#### Season 2017/2018 WOMEN
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1718.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 17 & team.id == 2002) %>% select(player.name) %>% table()
df_teams[(df_teams$lastname == "Kömmling"   &
df_teams$team_id == 2002         &
df_teams$season_id == "1718"     &
df_teams$league_gender == "Women"),]$player_id <- 100
df_teams[(df_teams$lastname == "Nestler"   &
df_teams$team_id == 2002         &
df_teams$season_id == "1718"     &
df_teams$league_gender == "Women"),]$player_id <- 101
df_teams[(df_teams$lastname == "Nitsche"   &
df_teams$team_id == 2002         &
df_teams$season_id == "1718"     &
df_teams$league_gender == "Women"),]$player_id <- 102
df_teams[(df_teams$lastname == "Scholz"    &
df_teams$team_id == 2002         &
df_teams$season_id == "1718"     &
df_teams$league_gender == "Women"),]$player_id <- 103
df_teams[(df_teams$lastname == "Stemmler"  &
df_teams$team_id == 2002         &
df_teams$season_id == "1718"     &
df_teams$league_gender == "Women"),]$player_id <- 104
# read_csv("./Matchreports/SEASONSMATCHPLAYERLEVELWOMEN1718.csv") %>%
# select(match.id, team.id, shirt.number, player.name) %>%
# filter(shirt.number == 18 & team.id == 2012) %>% select(player.name) %>% table()
df_teams[(df_teams$lastname == "Schieder"  &
df_teams$team_id == 2012         &
df_teams$season_id == "1718"     &
df_teams$league_gender == "Women"),]$player_id <- 100
# Remove tibble with duplicates
rm(duplicate_shirts)
staff <- df_teams[df_teams$role == "Staff",] %>%
select(-role, -shirt_number, -height, -player_id) %>%
mutate(position = droplevels(position),
nationality = droplevels(nationality)) %>%
mutate(firstname = iconv(firstname, to = "utf8"))
View(players)
staff <- df_teams[df_teams$role == "Staff",] %>%
select(-role, -shirt_number, -height, -player_id) %>%
mutate(position = droplevels(position),
nationality = droplevels(nationality)) %>%
mutate(firstname = iconv(firstname, to = "utf8")
lastname = iconv(lastname, to = "utf8"))
staff <- df_teams[df_teams$role == "Staff",] %>%
select(-role, -shirt_number, -height, -player_id) %>%
mutate(position = droplevels(position),
nationality = droplevels(nationality)) %>%
mutate(firstname = iconv(firstname, to = "utf8"),
lastname = iconv(lastname, to = "utf8"))
save(staff, file = "./data/staff.rda")
devtools::use_data(staff, staff, overwrite = TRUE, compress = "gzip")
players <- df_teams[df_teams$role != "Staff",] %>%
select(-role, league_gender, season_id, team_id, team_name,
player_id, shirt_number, position, firstname, lastname,
gender, birthdate, height, nationality) %>%
mutate(position = droplevels(position),
nationality = droplevels(nationality))
mutate(firstname = iconv(firstname, to = "utf8"),
lastname = iconv(lastname, to = "utf8"))
save(players, file = "./data/players.rda")
devtools::use_data(players, players, overwrite = TRUE, compress = "gzip")
source('~/Seafile/DataScience/Development/volleystat/data-raw/teams.R')
devtools::use_data(staff, staff, overwrite = TRUE, compress = "gzip")
devtools::use_data(players, players, overwrite = TRUE, compress = "gzip")
View(players)
validUTF8(players$firstname)
any(validUTF8(x)) == FALSE
any(validUTF8(players$firstname)) == FALSE
any(validUTF8(players$firstname)) == TRUE
which(validUTF8(players$firstname)) == FALSE
which(validUTF8(players$firstname)) == TRUE
which(validUTF8(players$firstname))
validUTF8(players$firstname)
Sys.setlocale
Sys.setlocale()
source('~/Seafile/DataScience/Development/volleystat/data-raw/teams.R')
devtools::use_data(players, players, overwrite = TRUE, compress = "gzip")
devtools::use_data(staff, staff, overwrite = TRUE, compress = "gzip")
devtools::load_all(".")
load("../data/sets.rda")
load("~/Seafile/DataScience/Development/volleystat/data/players.rda")
players %>%
filter(team_id == 2009, season_id == 1617, position == "Libero") %>%
left_join(matchstats, by = c("season_id" = "season_id", "team_id" = "team_id", "player_id" = "player_id")) %>%
select(season_id, team_name, lastname, firstname, starts_with("rec_"))
---
title: "Introduction to volleystat"
author: "Viktor Bozhinov"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
%\VignetteIndexEntry{Introduction to volleystat}
%\VignetteEngine{knitr::rmarkdown}
%\VignetteEncoding{UTF-8}
---
```{r setup, include = FALSE}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
```
```{r include=FALSE}
library(dplyr)
library(ggplot2)
load("../data/matches.rda")
load("../data/players.rda")
load("../data/matchstats.rda")
load("../data/staff.rda")
load("../data/sets.rda")
```
# Volleystat datasets
The volleystat package provides five different datasets.These datasets are based on the men's and women's first division
volleyball league in Germany for the seasons 2013/2014 to 2017/2018. All data is publicly avalable though not in a
similar structured manner.
## Matches data
The matches data contains two observations of each match. One observation for the home team and one
for the away team.
```{r, echo=FALSE}
glimpse(matches)
```
The variable *league_gender* provides information of the league's gender, the variable _season_id_ marks the starting year
of the season and the end year of the season. For example, season_id 14/15 means that the season started in autumn 2014
and ended in spring 2015. The distribution of matches across gender and seasons is depicted in the following table:
```{r echo=FALSE}
knitr::kable(matches %>% filter(match == "home") %>%
group_by(league_gender, season_id) %>%  summarize(n_matches = n()))
```
Both leagues have a round robin phase and a play-off phase. The variable *competition_stage* can be used to split
matches by the stage of the competition. In additon, the variable *match_day* holds information on the number of the
matchday in the main round. The table shows that the most matches are played in the main round.
```{r echo=FALSE}
knitr::kable(matches %>% filter(match == "home") %>%
group_by(league_gender, competition_stage) %>%  summarize(n_matches = n()))
```
The variable *spectators* is the officialy reported number of spectators which attended the match live. The distribution
of the variable for boath leagues is depicted below.
```{r echo=TRUE, fig.height=4, fig.show='hold', fig.width=6, message=FALSE, warning=FALSE}
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, spectators)  %>%
ggplot(aes(x = spectators, colour = factor(league_gender))) +
geom_histogram(position = "dodge")
```
The variable *match_duration* is the officialy reported duration of the match in minutes. The distribution
of the variable for boath leagues is depicted below.
```{r echo=TRUE, fig.height=4, fig.show='hold', fig.width=6, message=FALSE, warning=FALSE}
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, match_duration, set_won)  %>%
ggplot(aes(x = match_duration, colour = factor(league_gender))) +
geom_histogram(position = "dodge")
```
The variable  *team_id* is the team identifier which can be used together with *league_gender* and *season_id* to join
team information from the players or staff datasets. Note that while official team name changes over the seasons for
some teams, the team_id doesn't.
```{r echo=TRUE, message=FALSE, warning=FALSE}
matches %>% filter(match == "home") %>%
group_by(league_gender, team_name) %>%  summarize(n_matches = n())
```
The variable *set_won* counts th enumber of sets won by each team. Since volleyball is played in the best-of-five mode
this variable can be used to idetify wins and losses. If you want to see how many home team wins occured in
the season 2015/2016 for men and women separately you can do it as shown here:
```{r echo=TRUE, message=FALSE, warning=FALSE, paged.print=TRUE}
matches %>%
filter(match == "home", season_id == 1516) %>%
mutate(match_won = ifelse(set_won == 3, "wins", "losses")) %>%
group_by(league_gender, match_won) %>%
summarize(n_matches = n())
```
## players dataset
## staff
## Matchstats dataset
The matchstats dataset has been created from the official match reports of each match (if it was available). An example
of an official match report created by the author of the volleystat package can be found here:
http://live.volleyball-bundesliga.de/2016-17/Women/&2058.pdf
The dataset contains a series of identifiers which can be used to join the dataset to the teams data and the matches
data:
- league_gender
- season_id
- match_id
- team_id
- player_id
For example, let's say you want to take a look at all statistics on the reception of the libero of *VC Wiesbaden* in
the season 2016/2017. You can use the teams dataset to select the libero and the team and then join it to the matchstats
dataset:
```{r echo=TRUE, message=TRUE, warning=TRUE, paged.print=TRUE}
players %>%
filter(team_id == 2009, season_id == 1617, position == "Libero") %>%
left_join(matchstats, by = c("season_id" = "season_id", "team_id" = "team_id", "player_id" = "player_id")) %>%
select(season_id, team_name, lastname, firstname, starts_with("rec_"))
```
The variable vote is extracted only if it is reported as an integer (in some match reports this value is reported using
a three-point system which is not comparable to the numeric vote). The remaining variables of the dataset contain the
statistics of each player who was fielded in a match for the categories _Points_ (starts with *pt_*), _Serve_
(starts with *serv_*), _Reception_ (starts with *att_*), _Attack_ (starts with *att_*), _BK_ (starts with *att_*). For
example, if you want to compute how often the libero of *VC Wiesbaden* received the ball and how many errors she made
in all matches in the season 2016/2017 you can modify the code from above:
```{r echo=TRUE, message=TRUE, warning=TRUE, paged.print=TRUE}
players %>%
filter(team_id == 2009, season_id == 1617, position == "Libero") %>%
left_join(matchstats, by = c("season_id" = "season_id", "team_id" = "team_id", "player_id" = "player_id")) %>%
select(rec_tot, rec_err) %>%
summarise(rec_tot_sum = sum(rec_tot),
rec_err_tot = sum(rec_err))
```
View(players)
players %>%
filter(season_id == 1718) %>%
group_by(gender, position) %>%
summarise(mean_height = mean(height),
sd_height = sd(height),
min_height = min(hieght),
max_height = max(height))
players %>%
filter(season_id == 1718) %>%
group_by(gender, position) %>%
summarise(mean_height = mean(height),
sd_height = sd(height),
min_height = min(height),
max_height = max(height))
players %>%
filter(season_id == 1718) %>%
group_by(gender, position) %>%
summarise(obs = n())
players %>%
filter(season_id == 1718) %>%
group_by(gender, position) %>%
summarise(obs = n()),
players %>%
filter(season_id == 1718) %>%
group_by(gender, position) %>%
summarise(obs = n(),
mean_height = mean(height),
sd_height = sd(height),
min_height = min(height),
max_height = max(height))
knitr::kable(
players %>%
group_by(gender, position) %>%
summarise(obs = n(),
mean_height = mean(height),
sd_height = sd(height),
min_height = min(height),
max_height = max(height)))
matches %>% filter(match == "home", season_id == 1314) %>%
group_by(league_gender, team_name) %>%  summarize(n_matches = n())
matches %>% filter( season_id == 1314) %>%
group_by(league_gender, team_name) %>%  summarize(n_matches = n())
knitr::kable(
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, spectators)  %>%
ggplot(aes(x = spectators, colour = factor(league_gender))) +
geom_histogram(position = "dodge"))
load("~/Seafile/DataScience/Development/volleystat/data/matches.rda")
filter(league_gender, match) %>%
group_by(league_gender, match) %>%
summarise(obs = n())
matches %>%
group_by(league_gender, match) %>%
summarise(obs = n())
knitr::kable(
matches %>%
group_by(league_gender, match) %>%
summarise(obs = n())
)
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, spectators)  %>%
ggplot(aes(x = spectators, colour = factor(league_gender))) +
geom_histogram(position = "dodge")
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, spectators)  %>%
ggplot(aes(x = factor(league_gender), y = spectators)) +
geom_violin()
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, spectators)  %>%
ggplot(aes(x = factor(league_gender), y = spectators, colour = factor(competition_stage))) +
geom_violin()
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, spectators)  %>%
ggplot(aes(x = factor(league_gender), y = spectators)) +
geom_violin()
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, spectators)  %>%
ggplot(aes(x = factor(league_gender), y = spectators, col = factor(competition_stage))) +
geom_violin()
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, spectators)  %>%
ggplot(aes(x = factor(league_gender), y = spectators, col = factor(competition_stage))) +
geom_violin()
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, spectators)  %>%
ggplot(aes(x = factor(league_gender), y = spectators)) +
geom_violin()
matches %>% filter(match == "home") %>%
group_by(league_gender) %>% select(league_gender, match_duration, set_won)  %>%
ggplot(aes(x = match_duration)) +
geom_histogram(position = "dodge") +
facet_grid(.~factor(league_gender))
knitr::kable(
players %>%
filter(season_id == 1718) %>%
group_by(gender, position) %>%
summarise(obs = n(),
mean_height = mean(height),
sd_height = sd(height),
min_height = min(height),
max_height = max(height)))
load("~/Seafile/DataScience/Development/volleystat/data/staff.rda")
knitr::kable(
staff %>%
filter(season_id == 1415,
position == "Coach") %>%
select(firstname, lastname)
)
knitr::kable(
staff %>%
filter(season_id == 1415, position == "Coach") %>%
select(team_name, firstname, lastname)
)
knitr::kable(
staff %>%
filter(season_id == 1415, position == "Coach") %>%
select(league_gender, team_name, firstname, lastname) %>%
arrange(league_gender, team_name)
)
knitr::kable(
staff %>%
filter(season_id == 1415, position == "Coach") %>%
select(league_gender, team_name, firstname, lastname, nationality) %>%
arrange(league_gender, team_name)
)
load("~/Seafile/DataScience/Development/volleystat/data/sets.rda")
knitr::kable(
sets %>%
filter(match == "home") %>%
group_by(set) %>%
summarize(obs = n(),
mean_duration = mean(set_duration))
)
knitr::kable(
sets %>%
filter(match == "home") %>%
group_by(set) %>%
summarize(obs = n(),
mean_duration = mean(set_duration, na.rm = TRUE))
)
View(sets)
knitr::kable(
sets %>%
filter(match == "home") %>%
group_by(set) %>%
summarize(obs = n(),
mean_duration = mean(set_duration, na.rm = TRUE))
)
library(volleystat)
person("Hadley", "Wickham", email = "hadley@rstudio.com",
role = c("aut", "cre"))
devtools::load_all(".")
library(volleystat)
?volleystat
??volleystat
?volleystat
?players
devtools::check()
parseNamespaceFile()
parseNamespaceFile(volleystat)
loadNamespace(volleystat)
Encoding(matches)
Encoding(matches$league_gender)
Encoding(matches$competition_stage)
?Encoding
Encoding(matches$competition_stage)
Encoding(enc2utf8(matches$competition_stage))
Encoding(staff$lastname)
staff$lastname <- enc2utf8(staff$lastname)
Encoding(staff$lastname)
View(staff)
library(volleystat)
?players
?matches
?staff
Encoding(matchstats)
Encoding(matchstats$league_gender)
Encoding(matchstats$att_pt)
Encoding(matchstats$season_id)
devtools::use_readme_rmd()
head(matches)
head(sets)
head(players)
head(players)
